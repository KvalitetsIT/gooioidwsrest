version: '2'
networks:
  gooioidwsrest:
    driver: bridge
services:
   wsc-resources:
     image: build-gooioidwsrestresources/wsc
     build:
       context: .
       dockerfile: Dockerfile-resources-wsc
     environment:
       - TEMPLATE_FILE=/caddyfiletemplates/Caddyfile-wsc-nosessiondata
       - CADDYFILE=/config/caddyout-wsc-nosessiondata
       - LISTEN_PORT=8070
       - MONGO_HOST=mongo
       - MONGO_DATABASE=testddsfz2
       - WSC_STS_URL=https://sts/sts/service/sts
       - WSC_CLIENT_CERTIFICATE_FILE=/wsc/certificates/client.cer
       - WSC_CLIENT_KEY_FILE=/wsc/certificates/client.pem
       - WSC_SERVICE_ENDPOINT_HOST=testserviceaa
       - WSC_SERVICE_ENDPOINT_PORT=443
       - WSC_SERVICE_ENDPOINT_CONTEXT=test
       - WSC_SERVICE_AUDIENCE=urn:kit:testa:servicea
       - WSC_SESSION_DATA_URL=https://testservicea
       - WSC_TRUST_CERT_FILES="/wsc/trust/sts.cer", "/wsc/trust/testserviceaa.cer"
     volumes:
       - "./config_out:/config"
   wsc:
     image: kvalitetsit/gooioidwsrest:latest
     volumes_from:
       - wsc-resources:ro
#     ports:
#       - "8080:8070"
     command:
      - "-config"
      - "/wsc/Caddyfile-wsc"
     networks:
       - gooioidwsrest
   wsc-for-wsp:
     image: kvalitetsit/gooioidwsrest:latest
     volumes_from:
       - wsc-resources:ro
#     ports:
#       - "8070:8070"
     command:
      - "-config"
      - "/wsc/Caddyfile-wsc-for-wsp"
     networks:
       - gooioidwsrest

